/* eslint-disable no-return-assign */
/* eslint-disable no-unused-vars */
/* eslint-disable no-tabs */
/* eslint-disable no-mixed-spaces-and-tabs */
import React from 'react';
import { render, screen, fireEvent, queryByAttribute } from '@testing-library/react';
import '@babel/polyfill';
import { Provider } from 'react-redux';
import loadjs from 'loadjs';
import * as pieEncryption from '@vz-react/pie-encryption';
import { store } from '../../../../configureStore';
import PaymentType from '../../../../components/Web/PaymentInfoRedesign/FuncComp/paymentTypes';
import {
  paymentTypeNextProps,
  paymentTypeProps,
  paymentTypePropsBta,
  paymentTypePropsBtaError,
  paymentTypePropsCard,
  paymentTypePropsCardError,
  paymentTypePropsPaypal,
  paymentTypePropsshowPay,
} from './paymentTypesTestData';
import { Constants } from './constants';
import history from '../../../../utils/history';
import { spyFuncOn, spyRedirectOn } from '../../Common/jestCommon';
import * as MVAApiCall from '../../../../components/common/MVAApiCall.js';
import * as redirection from '../../../../redirection.js';
import * as sessionStorage from '../../../../utils/sessionStorage';
import { getSession, setSession } from '../../Common/sessionCommon';

describe('Check for paymentInfo', () => {
  const mockState = {
    SessionValues: Constants.sessionValues,
  };
  test('render Page component without crashing', () => {
    const dom = render(
      <Provider store={store}>
        <PaymentType {...paymentTypeProps} />
      </Provider>,
    );
    const creditCard1111 = screen.getByLabelText('Credit card ending in 1111 not selected');
    fireEvent.click(creditCard1111);
    const getById = queryByAttribute.bind(null, 'id');
    const cvvText = getById(dom.container, 'cvv');
    fireEvent.change(cvvText, { target: { value: '1' } });
    fireEvent.change(cvvText, { target: { value: '12' } });
    fireEvent.change(cvvText, { target: { value: '123' } });
    fireEvent.click(cvvText);
    const nextButton = screen.getByRole('button', { name: 'Button' });
    fireEvent.click(nextButton);
  });

});

getting below error 
 Unable to fire a "change" event - please provide a DOM element.

      43 |     const getById = queryByAttribute.bind(null, 'id');
      44 |     const cvvText = getById(dom.container, 'cvv');
    > 45 |     fireEvent.change(cvvText, { target: { value: '1' } });
         |               ^
      46 |     fireEvent.change(cvvText, { target: { value: '12' } });
      47 |     fireEvent.change(cvvText, { target: { value: '123' } });
      48 |     fireEvent.click(cvvText);
